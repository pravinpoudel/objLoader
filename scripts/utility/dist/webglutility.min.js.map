{"version":3,"sources":["webglutility.js"],"names":["createShader","gl","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","info","getShaderInfoLog","Error","String","createProgramFromShaderVariable","vertexShaderSource","fragmentShaderSource","program","createProgram","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","getProgramParameter","LINK_STATUS","concat","errorInfo","resizeCanvas","canvas","clientHeight","clientWidth","width","webglUtility"],"mappings":"aAAA,SAASA,aAAaC,EAAIC,EAAMC,GAC9B,IAAIC,EAASH,EAAGD,aAAaE,GAG7B,GAFAD,EAAGI,aAAaD,EAAQD,GACxBF,EAAGK,cAAcF,GACZH,EAAGM,mBAAmBH,EAAQH,EAAGO,gBAHtC,OAAIJ,EAIF,IAAIK,EAAOR,EAAGS,iBAAiBN,GAC/B,MAAM,IAAIO,MAAMC,OAAOH,IAK3B,SAASI,gCAPPZ,EACEa,EACAC,GAUF,IAAMC,EAAUf,EAAGgB,gBARnBC,EAAAlB,aAAAC,EAAAA,EAAAkB,cAAAL,GACDM,EAAApB,aAUGC,EARJA,EAAAoB,gBAKEN,GAWA,GATAd,EAAAqB,aAAMF,EAAiBpB,GAKvBC,EAAGqB,aAAaN,EAASE,GACzBjB,EAAGqB,YAAHN,GAGKf,EAAGsB,oBAAoBP,EAASf,EAAGuB,aAGvC,OAAAR,EAHD,IAAKf,EAAGsB,EAAAA,kBAA+BP,GACrC,KAAA,wCAAAS,OAAAC,GAIH,SAAAC,aAAAC,GAGC,IAAIC,EAAeD,EAAOC,aAD5BC,EAASH,EAAaC,YAEhBE,EAAAA,EAAcF,MAKdC,IAHQD,EAAOG,QAGYD,IAAgBC,IAA/CH,EAAIC,MAAYC,EACdF,EAAOG,OAAQD,iFAKnB,IAAME,aAAe,CAArBnB,gCAAAA,gCACEA,aAAAA,uBAIamB","file":"webglutility.min.js","sourcesContent":["function createShader(gl, type, source) {\r\n  let shader = gl.createShader(type);\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    let info = gl.getShaderInfoLog(shader);\r\n    throw new Error(String(info));\r\n  }\r\n  return shader;\r\n}\r\n\r\nfunction createProgramFromShaderVariable(\r\n  gl,\r\n  vertexShaderSource,\r\n  fragmentShaderSource\r\n) {\r\n  const program = gl.createProgram();\r\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\r\n  const fragmentShader = createShader(\r\n    gl,\r\n    gl.FRAGMENT_SHADER,\r\n    fragmentShaderSource\r\n  );\r\n  gl.attachShader(program, vertexShader);\r\n  gl.attachShader(program, fragmentShader);\r\n  gl.linkProgram(program);\r\n\r\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n    let errorInfo = gl.getProgramInfoLog(program);\r\n    throw `couldnot compile the program because ${errorInfo}`;\r\n  }\r\n  return program;\r\n}\r\n\r\nfunction resizeCanvas(canvas) {\r\n  let clientHeight = canvas.clientHeight;\r\n  let clientWidth = canvas.clientWidth;\r\n\r\n  let width = canvas.width;\r\n  let height = canvas.height;\r\n\r\n  if (clientHeight !== height || clientWidth !== width) {\r\n    canvas.width = clientWidth;\r\n    canvas.height = clientHeight;\r\n  }\r\n}\r\n\r\nconst webglUtility = {\r\n  createProgramFromShaderVariable,\r\n  resizeCanvas,\r\n};\r\n\r\nexport default webglUtility;\r\n"]}